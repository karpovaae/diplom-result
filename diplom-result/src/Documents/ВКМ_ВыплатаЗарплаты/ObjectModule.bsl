#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий
	
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
//ВКМ
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ВКМ_Выплаты;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ВКМ_Сотрудник", "ВКМ_Сотрудник");
	Блокировка.Заблокировать();
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ВыплатаЗарплатыВКМ_Выплаты.ВКМ_Сотрудник,
		|	СУММА(ВКМ_ВыплатаЗарплатыВКМ_Выплаты.ВКМ_Сумма) КАК ВКМ_Сумма,
		|	ВКМ_ВыплатаЗарплатыВКМ_Выплаты.ВКМ_ВидРасчета
		|ПОМЕСТИТЬ ВТ_Документ
		|ИЗ
		|	Документ.ВКМ_ВыплатаЗарплаты.ВКМ_Выплаты КАК ВКМ_ВыплатаЗарплатыВКМ_Выплаты
		|ГДЕ
		|	ВКМ_ВыплатаЗарплатыВКМ_Выплаты.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ВыплатаЗарплатыВКМ_Выплаты.ВКМ_Сотрудник,
		|	ВКМ_ВыплатаЗарплатыВКМ_Выплаты.ВКМ_ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Документ.ВКМ_Сотрудник,
		|	ВТ_Документ.ВКМ_Сумма,
		|	ВТ_Документ.ВКМ_ВидРасчета,
		|	ЕСТЬNULL(ВКМ_ВзаиморасчетыССотрудникамиОстатки.ВКМ_СуммаОстаток, 0) КАК ВКМ_СуммаОстаток
		|ИЗ
		|	ВТ_Документ КАК ВТ_Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВКМ_ВзаиморасчетыССотрудниками.Остатки(&Дата, ВКМ_Сотрудник В
		|			(ВЫБРАТЬ
		|				ВТ_Документ.ВКМ_Сотрудник КАК Сотрудник
		|			ИЗ
		|				ВТ_Документ)) КАК ВКМ_ВзаиморасчетыССотрудникамиОстатки
		|		ПО ВТ_Документ.ВКМ_Сотрудник = ВКМ_ВзаиморасчетыССотрудникамиОстатки.ВКМ_Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", МоментВремени());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.ВКМ_СуммаОстаток = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("У сотрудника %1 отсутствуют начисления", ВыборкаДетальныеЗаписи.ВКМ_Сотрудник));
			Отказ = Истина;
		ИначеЕсли ВыборкаДетальныеЗаписи.ВКМ_Сумма > ВыборкаДетальныеЗаписи.ВКМ_СуммаОстаток Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Сотруднику %1 начислено %2", ВыборкаДетальныеЗаписи.ВКМ_Сотрудник, ВыборкаДетальныеЗаписи.ВКМ_СуммаОстаток));
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить
		КонецЕсли;
				
		// регистр ВКМ_ВзаиморасчетыССотрудниками
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.ВКМ_Сотрудник;
		Движение.ВКМ_ВидРасчета = ВыборкаДетальныеЗаписи.ВКМ_ВидРасчета;
		Движение.ВКМ_Сумма = ВыборкаДетальныеЗаписи.ВКМ_Сумма;
		
	КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли