#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий
	
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
//ВКМ
	
	СформироватьДвижения();
	
	РассчитатьОклад();
	
	РассчитатьОтпуск();
	
	РассчитатьУдержания();
	
	СформироватьДвиженияВзаиморасчетыССотрудниками();
	
	СформироватьДвиженияОтпускСотрудников();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
//ВКМ
	
	Для Каждого Строка Из ВКМ_Начисления Цикл
		
		Если ЗначениеЗаполнено(Строка.ВКМ_ДатаНачала) И ЗначениеЗаполнено(Строка.ВКМ_ДатаОкончания) Тогда
			Если Строка.ВКМ_ДатаНачала > Строка.ВКМ_ДатаОкончания Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке %1 дата начала больше даты окончания", Строка.НомерСтроки));
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если Строка.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ФиксПремия Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке %1 указан неверный вид расчета", Строка.НомерСтроки));
			Отказ = Истина;
		КонецЕсли;
				
	КонецЦикла
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвижения()
	
//ВКМ
	
	Движения.ВКМ_ОсновныеНачисления.Записывать = Истина;
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	Движения.ВКМ_Удержания.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
			"ВЫБРАТЬ
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник,
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета,
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаНачала,
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаОкончания,
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ГрафикРаботы
			|ПОМЕСТИТЬ ВТ_Документ
			|ИЗ
			|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_Начисления КАК ВКМ_НачисленияЗарплатыВКМ_Начисления
			|ГДЕ
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.Ссылка = &Ссылка
			|СГРУППИРОВАТЬ ПО
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник,
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета,
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаНачала,
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаОкончания,
			|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ГрафикРаботы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_Сотрудник,
			|	ВКМ_ВыполненныеСотрудникомРаботыОбороты.ВКМ_СуммаКОплатеОборот
			|ПОМЕСТИТЬ ВТ_ВыполненныеРаботы
			|ИЗ
			|	РегистрНакопления.ВКМ_ВыполненныеСотрудникомРаботы.Обороты(&ДатаНачала, &ДатаОкончания,,) КАК
			|		ВКМ_ВыполненныеСотрудникомРаботыОбороты
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник,
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот
			|ПОМЕСТИТЬ ВТ_ПроцентОтРабот
			|ИЗ
			|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата,) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_Документ.ВКМ_Сотрудник,
			|	ВТ_Документ.ВКМ_ВидРасчета,
			|	ВТ_Документ.ВКМ_ДатаНачала,
			|	ВТ_Документ.ВКМ_ДатаОкончания,
			|	ВТ_Документ.ВКМ_ГрафикРаботы,
			|	ВТ_ПроцентОтРабот.ВКМ_ПроцентОтРабот,
			|	ВТ_ВыполненныеРаботы.ВКМ_СуммаКОплатеОборот КАК ВКМ_СуммаКОплате
			|ИЗ
			|	ВТ_Документ КАК ВТ_Документ
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВыполненныеРаботы КАК ВТ_ВыполненныеРаботы
			|		ПО ВТ_Документ.ВКМ_Сотрудник = ВТ_ВыполненныеРаботы.ВКМ_Сотрудник
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПроцентОтРабот КАК ВТ_ПроцентОтРабот
			|		ПО ВТ_Документ.ВКМ_Сотрудник = ВТ_ПроцентОтРабот.ВКМ_Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ТипЗнч(ВыборкаДетальныеЗаписи.ВКМ_ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ОсновныеНачисления") Тогда
					
			// регистр ВКМ_ОсновныеНачисления
			Движение = Движения.ВКМ_ОсновныеНачисления.Добавить();
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.ПериодДействияНачало = ВыборкаДетальныеЗаписи.ВКМ_ДатаНачала;
			Движение.ПериодДействияКонец = ВыборкаДетальныеЗаписи.ВКМ_ДатаОкончания;
			Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВКМ_ВидРасчета;
			Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.ВКМ_Сотрудник;
			Движение.ВКМ_ГрафикРаботы = ВыборкаДетальныеЗаписи.ВКМ_ГрафикРаботы;
			
			Если ВыборкаДетальныеЗаписи.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Оклад Тогда
			
			Движение.БазовыйПериодНачало = ВыборкаДетальныеЗаписи.ВКМ_ДатаНачала;
			Движение.БазовыйПериодКонец = ВыборкаДетальныеЗаписи.ВКМ_ДатаОкончания;
			
			ИначеЕсли ВыборкаДетальныеЗаписи.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск Тогда
			
			Движение.БазовыйПериодНачало = НачалоМесяца(ДобавитьМесяц(ВыборкаДетальныеЗаписи.ВКМ_ДатаНачала, -12));
			Движение.БазовыйПериодКонец = КонецМесяца(ДобавитьМесяц(ВыборкаДетальныеЗаписи.ВКМ_ДатаОкончания, -1));
			
			КонецЕсли;
							
		КонецЕсли;
				
		Если ТипЗнч(ВыборкаДетальныеЗаписи.ВКМ_ВидРасчета) = Тип("ПланВидовРасчетаСсылка.ВКМ_ДополнительныеНачисления") Тогда
	
			// регистр ВКМ_ДополнительныеНачисления
			Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
			Движение.ПериодРегистрации = НачалоМесяца(Дата);
			Движение.ВидРасчета = ВыборкаДетальныеЗаписи.ВКМ_ВидРасчета;
			Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.ВКМ_Сотрудник;
			Движение.ВКМ_ПроцентПремии = ВыборкаДетальныеЗаписи.ВКМ_ПроцентОтРабот;
			Движение.ВКМ_Результат = ВыборкаДетальныеЗаписи.ВКМ_СуммаКОплате;
				
		КонецЕсли;
	
		//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
		//Данный фрагмент построен конструктором.
		//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
		//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
		
	КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	СформироватьДвиженияУдержания();
	
	Движения.ВКМ_ОсновныеНачисления.Записать();
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	Движения.ВКМ_Удержания.Записать();
	
КонецПроцедуры

Процедура СформироватьДвиженияУдержания()
	
//ВКМ
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_Начисления КАК ВКМ_НачисленияЗарплатыВКМ_Начисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
	// регистр ВКМ_Удержания
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.ВКМ_НДФЛ;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.ВКМ_Сотрудник;

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
		
	КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура РассчитатьОклад()
	
//ВКМ
			
		Запрос = Новый Запрос;
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ВКМ_ОсновныеНачисленияДанныеГрафика.НомерСтроки,
			|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеПериодДействия, 0) КАК План,
			|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_ЗначениеФактическийПериодДействия, 0) КАК Факт,
			|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Оклад КАК Оклад,
			|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВидРасчета,
			|	ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_Сотрудник
			|ИЗ
			|	РегистрРасчета.ВКМ_ОсновныеНачисления.ДанныеГрафика(Регистратор = &Ссылка
			|	И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияДанныеГрафика
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Период, ВКМ_Сотрудник В
			|			(ВЫБРАТЬ
			|				ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК Сотрудник
			|			ИЗ
			|				РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
			|			ГДЕ
			|				ВКМ_ОсновныеНачисления.Регистратор = &Ссылка
			|				И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета)) КАК ВКМ_УсловияОплатыСотрудниковСрезПоследних
			|		ПО ВКМ_ОсновныеНачисленияДанныеГрафика.ВКМ_Сотрудник = ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Оклад);
		Запрос.УстановитьПараметр("Период", Дата);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Если ВыборкаДетальныеЗаписи.План = 0 Тогда
				ОбщегоНазначения.СообщитьПользователю("Необходимо заполнить график работы");
				Прервать;
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.Оклад = Null Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("У сотрудника %1 не заполнены условия оплаты", ВыборкаДетальныеЗаписи.ВКМ_Сотрудник));
				Прервать;
			КонецЕсли;
			
			Движение = Движения.ВКМ_ОсновныеНачисления[ВыборкаДетальныеЗаписи.НомерСтроки - 1];
			Движение.ВКМ_Результат = ВыборкаДетальныеЗаписи.Оклад * ВыборкаДетальныеЗаписи.Факт / ВыборкаДетальныеЗаписи.План;
			Движение.ВКМ_ОтработаноЧасов = ВыборкаДетальныеЗаписи.Факт;
			
		КонецЦикла;
		
		Движения.ВКМ_ОсновныеНачисления.Записать(, Истина);
		
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
		//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА	
	
КонецПроцедуры

Процедура РассчитатьОтпуск()
	
//ВКМ	
	
	ЗапросОтпуск = Новый Запрос;
	ЗапросОтпуск.Текст = "ВЫБРАТЬ
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|	ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_ОтработаноЧасовБаза, 0) КАК ОтработаноЧасов,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза, 0) КАК ОснРезультат,
	|	ВКМ_ОсновныеНачисления.НомерСтроки КАК НомерСтроки,
	|	ЕСТЬNULL(ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.ВКМ_РезультатБаза, 0) КАК ДопРезультат
	|ИЗ
	|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_ОсновныеНачисления.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения,,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_ОсновныеНачисления.НомерСтроки = ВКМ_ОсновныеНачисленияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
	|	И ВКМ_ОсновныеНачисления.ВидРасчета = &ВидРасчета";
	
		
	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Сотрудник");
		
	ЗапросОтпуск.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск);
	ЗапросОтпуск.УстановитьПараметр("Регистратор", Ссылка);
	ЗапросОтпуск.УстановитьПараметр("Измерения", Измерения);
		
	РезультатОтпуск = ЗапросОтпуск.Выполнить().Выбрать();
	
	Пока РезультатОтпуск.Следующий() Цикл
		
		Движение = Движения.ВКМ_ОсновныеНачисления[РезультатОтпуск.НомерСтроки - 1];
		
		ОтработаноДней = РезультатОтпуск.ОтработаноЧасов / 8;
		
		ДнейОтпуска = (НачалоДня(РезультатОтпуск.ПериодДействияКонец) - НачалоДня(РезультатОтпуск.ПериодДействияНачало)) / (60 * 60 *24);
		
		Если ОтработаноДней <> 0 Тогда
		
		Движение.ВКМ_Результат = (РезультатОтпуск.ОснРезультат + РезультатОтпуск.ДопРезультат)/ ОтработаноДней * ДнейОтпуска;
		
		Иначе
			
		Движение.ВКМ_Результат = 0;	
		
		КонецЕсли
		
	КонецЦикла;
	
	Движения.ВКМ_ОсновныеНачисления.Записать( , Истина);	
	
КонецПроцедуры

Процедура РассчитатьУдержания()
	
//ВКМ
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.ВКМ_РезультатБаза КАК ОснРезультат
	|ПОМЕСТИТЬ ВT_ОсновныеУдержания
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ОсновныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ОсновныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
	|	И ВКМ_УдержанияБазаВКМ_ОсновныеНачисления.РегистраторРазрез = &Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВКМ_Удержания.НомерСтроки,
	|	ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.ВКМ_РезультатБаза КАК ДопРезультат
	|ПОМЕСТИТЬ ВТ_ДопУдержания
	|ИЗ
	|	РегистрРасчета.ВКМ_Удержания КАК ВКМ_Удержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ВКМ_Удержания.БазаВКМ_ДополнительныеНачисления(&Измерения, &Измерения, &Разрезы,
	|			Регистратор = &Регистратор
	|		И ВидРасчета = &ВидРасчета) КАК ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления
	|		ПО ВКМ_Удержания.НомерСтроки = ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.НомерСтроки
	|ГДЕ
	|	ВКМ_Удержания.Регистратор = &Регистратор
	|	И ВКМ_Удержания.ВидРасчета = &ВидРасчета
	|	И
	|		ТИПЗНАЧЕНИЯ(ВКМ_УдержанияБазаВКМ_ДополнительныеНачисления.РегистраторРазрез) <> ТИП(Документ.ВКМ_НачислениеФиксированнойПремии)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВT_ОсновныеУдержания.НомерСтроки,
	|	ЕСТЬNULL(ВT_ОсновныеУдержания.ОснРезультат, 0) КАК ОснРезультат,
	|	ЕСТЬNULL(ВТ_ДопУдержания.ДопРезультат, 0) КАК ДопРезультат
	|ИЗ
	|	ВT_ОсновныеУдержания КАК ВT_ОсновныеУдержания
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДопУдержания КАК ВТ_ДопУдержания
	|		ПО ВT_ОсновныеУдержания.НомерСтроки = ВТ_ДопУдержания.НомерСтроки";
	
	Измерения = Новый Массив;
	Измерения.Добавить("ВКМ_Сотрудник");
	
	Разрезы = Новый Массив;
	Разрезы.Добавить("Регистратор");
	
	Запрос.УстановитьПараметр("Измерения", Измерения);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.УстановитьПараметр("ВидРасчета", ПланыВидовРасчета.ВКМ_Удержания.ВКМ_НДФЛ);
	Запрос.УстановитьПараметр("Разрезы", Разрезы);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Пока Результат.Следующий() Цикл
		
		Движение = Движения.ВКМ_Удержания[Результат.НомерСтроки - 1];
		Движение.ВКМ_Результат = (Результат.ОснРезультат + Результат.ДопРезультат) * 13 /100;
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать( , Истина);
		
КонецПроцедуры

Процедура СформироватьДвиженияВзаиморасчетыССотрудниками()
	
//ВКМ
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник КАК СотрудникОснНач,
		|	СУММА(ВКМ_ОсновныеНачисления.ВКМ_Результат) КАК РезультатОснНач,
		|	ВКМ_ОсновныеНачисления.ВидРасчета
		|ПОМЕСТИТЬ ВТ_ОсновныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ОсновныеНачисления КАК ВКМ_ОсновныеНачисления
		|ГДЕ
		|	ВКМ_ОсновныеНачисления.Регистратор = &Регистратор
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОсновныеНачисления.ВКМ_Сотрудник,
		|	ВКМ_ОсновныеНачисления.ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник КАК СотрудникДопНач,
		|	СУММА(ВКМ_ДополнительныеНачисления.ВКМ_Результат) КАК РезультатДопНач,
		|	ВКМ_ДополнительныеНачисления.ВидРасчета
		|ПОМЕСТИТЬ ВТ_ДополнительныеНачисления
		|ИЗ
		|	РегистрРасчета.ВКМ_ДополнительныеНачисления КАК ВКМ_ДополнительныеНачисления
		|ГДЕ
		|	ВКМ_ДополнительныеНачисления.Регистратор = &Регистратор
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ДополнительныеНачисления.ВКМ_Сотрудник,
		|	ВКМ_ДополнительныеНачисления.ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник КАК Сотрудник,
		|	ВТ_ОсновныеНачисления.РезультатОснНач,
		|	ВТ_ДополнительныеНачисления.РезультатДопНач,
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета КАК ВидРасчета
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_Начисления КАК ВКМ_НачисленияЗарплатыВКМ_Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОсновныеНачисления КАК ВТ_ОсновныеНачисления
		|		ПО ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник = ВТ_ОсновныеНачисления.СотрудникОснНач
		|		И ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета = ВТ_ОсновныеНачисления.ВидРасчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДополнительныеНачисления КАК ВТ_ДополнительныеНачисления
		|		ПО ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник = ВТ_ДополнительныеНачисления.СотрудникДопНач
		|		И ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета = ВТ_ДополнительныеНачисления.ВидРасчета
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.Ссылка = &Регистратор";
	
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		// регистр ВКМ_ВзаиморасчетыССотрудниками
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.Сотрудник;
		Движение.ВКМ_ВидРасчета = ВыборкаДетальныеЗаписи.ВидРасчета;
		Если ВыборкаДетальныеЗаписи.РезультатОснНач = Null Тогда
			Движение.ВКМ_Сумма = ВыборкаДетальныеЗаписи.РезультатДопНач * 0.87;
		Иначе
			Движение.ВКМ_Сумма = ВыборкаДетальныеЗаписи.РезультатОснНач * 0.87;
		КонецЕсли;
			
	КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	//Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура СформироватьДвиженияОтпускСотрудников()
	
//ВКМ
		
	Движения.ВКМ_Отпуска.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_Сотрудник,
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаОкончания,
		|	РАЗНОСТЬДАТ(ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаНачала,
		|		ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ДатаОкончания, ДЕНЬ) + 1 КАК КоличествоДней
		|ИЗ
		|	Документ.ВКМ_НачисленияЗарплаты.ВКМ_Начисления КАК ВКМ_НачисленияЗарплатыВКМ_Начисления
		|ГДЕ
		|	ВКМ_НачисленияЗарплатыВКМ_Начисления.Ссылка = &Ссылка
		|	И ВКМ_НачисленияЗарплатыВКМ_Начисления.ВКМ_ВидРасчета = &ВКМ_ВидРасчета";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ВКМ_ВидРасчета", ПланыВидовРасчета.ВКМ_ОсновныеНачисления.ВКМ_Отпуск);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		// регистр ВКМ_Отпуска
		Движение = Движения.ВКМ_Отпуска.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = ВыборкаДетальныеЗаписи.ВКМ_ДатаОкончания;
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.ВКМ_Сотрудник;
		Движение.ВКМ_Значение = ВыборкаДетальныеЗаписи.КоличествоДней;
		
	КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли

