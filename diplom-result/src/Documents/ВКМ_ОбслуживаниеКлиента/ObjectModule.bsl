#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
//ВКМ
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВКМ_Договор, "ВидДоговора, ВКМ_ДатаНачалаДействияДоговора, ВКМ_ДатаОкончанияДействияДоговора");
	
	Если Реквизиты.ВидДоговора <> ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание") Тогда
		ОбщегоНазначения.СообщитьПользователю("Необходимо выбрать договор с типом - Абонентская плата");
		Отказ = Истина;
	КонецЕсли;
	
	Если Дата < Реквизиты.ВКМ_ДатаНачалаДействияДоговора Или Дата > Реквизиты.ВКМ_ДатаОкончанияДействияДоговора Тогда
		ОбщегоНазначения.СообщитьПользователю("Дата документа вне срока действия договора");
		Отказ = Истина;
	КонецЕсли;		
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
//ВКМ
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтоимостьЧасаРаботыСпециалиста КАК ВКМ_СтоимостьЧасаРаботыСпециалиста,
		|	СУММА(ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.ВКМ_ЧасыКОплатеКлиенту) КАК ВКМ_ЧасыКОплатеКлиенту,
		|	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист КАК ВКМ_Специалист
		|ПОМЕСТИТЬ ВТ_Документ
		|ИЗ
		|	Документ.ВКМ_ОбслуживаниеКлиента.ВКМ_ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
		|		ПО ВКМ_ОбслуживаниеКлиентаВКМ_ВыполненныеРаботы.Ссылка = ВКМ_ОбслуживаниеКлиента.Ссылка
		|ГДЕ
		|	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_ОбслуживаниеКлиента.ВКМ_Договор.ВКМ_СтоимостьЧасаРаботыСпециалиста,
		|	ВКМ_ОбслуживаниеКлиента.ВКМ_Специалист
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_Сотрудник КАК Сотрудник,
		|	ВКМ_УсловияОплатыСотрудниковСрезПоследних.ВКМ_ПроцентОтРабот КАК ПроцентОтРабот
		|ПОМЕСТИТЬ ВТ_Оплата
		|ИЗ
		|	РегистрСведений.ВКМ_УсловияОплатыСотрудников.СрезПоследних(&Дата, ВКМ_Сотрудник = &Сотрудник) КАК
		|		ВКМ_УсловияОплатыСотрудниковСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Документ.ВКМ_СтоимостьЧасаРаботыСпециалиста,
		|	ВТ_Документ.ВКМ_ЧасыКОплатеКлиенту,
		|	ВТ_Оплата.ПроцентОтРабот
		|ИЗ
		|	ВТ_Документ КАК ВТ_Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Оплата КАК ВТ_Оплата
		|		ПО ВТ_Документ.ВКМ_Специалист = ВТ_Оплата.Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Сотрудник", ВКМ_Специалист);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.ПроцентОтРабот = Null Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("Cпециалисту %1 не установлен процент оплаты от работ", ВКМ_Специалист));
			Отказ = Истина;
			Возврат;
		Иначе
			
		// регистр ВКМ_ВыполненныеКлиентуРаботы
		Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
		Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВКМ_Клиент = ВКМ_Клиент;
		Движение.ВКМ_Договор = ВКМ_Договор;
		Движение.ВКМ_КоличествоЧасов = ВыборкаДетальныеЗаписи.ВКМ_ЧасыКОплатеКлиенту;
		Движение.ВКМ_СуммаКОплате = ВыборкаДетальныеЗаписи.ВКМ_ЧасыКОплатеКлиенту * ВыборкаДетальныеЗаписи.ВКМ_СтоимостьЧасаРаботыСпециалиста;		
	
		// регистр ВКМ_ВыполненныеСотрудникомРаботы
		Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;
		Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
		Движение.Период = Дата;
		Движение.ВКМ_Сотрудник = ВКМ_Специалист;
		Движение.ВКМ_ЧасовКОплате = ВыборкаДетальныеЗаписи.ВКМ_ЧасыКОплатеКлиенту;
		Движение.ВКМ_СуммаКОплате = (ВыборкаДетальныеЗаписи.ВКМ_ЧасыКОплатеКлиенту * ВыборкаДетальныеЗаписи.ВКМ_СтоимостьЧасаРаботыСпециалиста * ВыборкаДетальныеЗаписи.ПроцентОтРабот) / 100;

		//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
		//Данный фрагмент построен конструктором.
		//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
		//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
				
		КонецЕсли;
			
	КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
//ВКМ
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ВКМ_ДатаПроведенияРабот, ВКМ_ВремяНачалаРаботПлан, ВКМ_ВремяОкончанияРаботПлан, ВКМ_Специалист");
	
	Если Реквизиты.ВКМ_ДатаПроведенияРабот <> ВКМ_ДатаПроведенияРабот
	Или Реквизиты.ВКМ_ВремяНачалаРаботПлан <> ВКМ_ВремяНачалаРаботПлан
	Или Реквизиты.ВКМ_ВремяОкончанияРаботПлан <> ВКМ_ВремяОкончанияРаботПлан
	Или Реквизиты.ВКМ_Специалист <> ВКМ_Специалист Тогда
		ЗаказИзменен = Истина;
	Иначе
		ЗаказИзменен = Ложь;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЗаказИзменен", ЗаказИзменен);
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);		
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
//ВКМ
	
	Если ОбменДанными.Загрузка Тогда
		Возврат
	КонецЕсли;
	
	Если ДополнительныеСвойства.ЭтоНовый Тогда
		ТекстСообщения = СтрШаблон("Новый заказ №%1. Специалист - %2. Дата проведения работ: %3, время начала: %4, время окончания: %5",
							Номер, ВКМ_Специалист, Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"),
							Формат(ВКМ_ВремяНачалаРаботПлан, "ДЛФ=T"), Формат(ВКМ_ВремяОкончанияРаботПлан, "ДЛФ=T"));
							
		НовыйОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовыйОбъект.ВКМ_ТекстСообщения = ТекстСообщения;
		НовыйОбъект.Записать();
		
	ИначеЕсли ДополнительныеСвойства.ЗаказИзменен Тогда
		
		ТекстСообщения = СтрШаблон("Заказ №%1 изменен. Специалист - %2. Дата проведения работ: %3, время начала: %4, время окончания: %5",
							Номер, ВКМ_Специалист, Формат(ВКМ_ДатаПроведенияРабот, "ДЛФ=D"),
							Формат(ВКМ_ВремяНачалаРаботПлан, "ДЛФ=T"), Формат(ВКМ_ВремяОкончанияРаботПлан, "ДЛФ=T"));
							
		НовыйОбъект = Справочники.ВКМ_УведомленияТелеграмБоту.СоздатьЭлемент();
		НовыйОбъект.ВКМ_ТекстСообщения = ТекстСообщения;
		НовыйОбъект.Записать();
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#КонецЕсли
