#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
//ВКМ
	
	СформироватьДвиженияДополнительныеНачисления();

	СформироватьДвиженияУдержания();
	
	СформироватьДвиженияВзаиморасчетыССотрудниками();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СформироватьДвиженияДополнительныеНачисления()
	
//ВКМ
	
	Движения.ВКМ_ДополнительныеНачисления.Записывать = Истина;
	
	// регистр ВКМ_ДополнительныеНачисления	
	Для Каждого Строка из ВКМ_СписокСотрудников Цикл
		
		Движение = Движения.ВКМ_ДополнительныеНачисления.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ФиксПремия;		
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.ВКМ_Результат = Строка.ВКМ_СуммаПремии;
		
	КонецЦикла;
	
	Движения.ВКМ_ДополнительныеНачисления.Записать();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура СформироватьДвиженияУдержания()
	
//ВКМ
	
	Движения.ВКМ_Удержания.Записывать = Истина;
	
	// регистр ВКМ_Удержания
	Для Каждого Строка из ВКМ_СписокСотрудников Цикл
		
		Движение = Движения.ВКМ_Удержания.Добавить();
		Движение.ПериодРегистрации = Дата;
		Движение.ВидРасчета = ПланыВидовРасчета.ВКМ_Удержания.ВКМ_НДФЛ;
		Движение.ВКМ_Сотрудник = Строка.ВКМ_Сотрудник;
		Движение.БазовыйПериодНачало = НачалоМесяца(Дата);
		Движение.БазовыйПериодКонец = КонецМесяца(Дата);
		Движение.ВКМ_Результат = Строка.ВКМ_СуммаПремии * 0.13;
		
	КонецЦикла;
	
	Движения.ВКМ_Удержания.Записать();

	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

Процедура СформироватьДвиженияВзаиморасчетыССотрудниками()
	
//ВКМ
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.ВКМ_Сотрудник,
		|	СУММА(ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.ВКМ_СуммаПремии) КАК ВКМ_СуммаПремии
		|ИЗ
		|	Документ.ВКМ_НачислениеФиксированнойПремии.ВКМ_СписокСотрудников КАК
		|		ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников
		|ГДЕ
		|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.Ссылка = &Ссылка
		|СГРУППИРОВАТЬ ПО
		|	ВКМ_НачислениеФиксированнойПремииВКМ_СписокСотрудников.ВКМ_Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		// регистр ВКМ_ВзаиморасчетыССотрудниками
		Движение = Движения.ВКМ_ВзаиморасчетыССотрудниками.Добавить();
		Движение.Период = Дата;
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.ВКМ_ВидРасчета = ПланыВидовРасчета.ВКМ_ДополнительныеНачисления.ВКМ_ФиксПремия;		
		Движение.ВКМ_Сотрудник = ВыборкаДетальныеЗаписи.ВКМ_Сотрудник;
		Движение.ВКМ_Сумма = ВыборкаДетальныеЗаписи.ВКМ_СуммаПремии - ВыборкаДетальныеЗаписи.ВКМ_СуммаПремии * 0.13;
	
	КонецЦикла;
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Движения.ВКМ_ВзаиморасчетыССотрудниками.Записать();
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли