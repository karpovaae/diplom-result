#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
//ВКМ
	
	Для Каждого Строка Из ВКМ_ОтпускаСотрудников Цикл
		
		Если ЗначениеЗаполнено(Строка.ВКМ_ДатаНачала) И ЗначениеЗаполнено(Строка.ВКМ_ДатаОкончания) Тогда
			Если Строка.ВКМ_ДатаНачала > Строка.ВКМ_ДатаОкончания Тогда
				ОбщегоНазначения.СообщитьПользователю(СтрШаблон("В строке %1 не верно указан период отпуска", Строка.НомерСтроки));
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
				
	КонецЦикла
			
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
//ВКМ

	Движения.ВКМ_Отпуска.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ВКМ_ГрафикОтпусковВКМ_ОтпускаСотрудников.ВКМ_Сотрудник,
		|	ВКМ_ГрафикОтпусковВКМ_ОтпускаСотрудников.ВКМ_ДатаОкончания,
		|	РАЗНОСТЬДАТ(ВКМ_ГрафикОтпусковВКМ_ОтпускаСотрудников.ВКМ_ДатаНачала,
		|		ВКМ_ГрафикОтпусковВКМ_ОтпускаСотрудников.ВКМ_ДатаОкончания, ДЕНЬ) + 1 КАК КоличествоДней
		|ИЗ
		|	Документ.ВКМ_ГрафикОтпусков.ВКМ_ОтпускаСотрудников КАК ВКМ_ГрафикОтпусковВКМ_ОтпускаСотрудников
		|ГДЕ
		|	ВКМ_ГрафикОтпусковВКМ_ОтпускаСотрудников.Ссылка = &Ссылка
		|ИТОГИ
		|	СУММА(КоличествоДней)
		|ПО
		|	ВКМ_Сотрудник";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	КоличествоДнейОтпуска = 28;
	
	Пока Результат.Следующий() Цикл
		
		ПревышеноДней = Результат.КоличествоДней - КоличествоДнейОтпуска;
		
		Если ПревышеноДней > 0 Тогда
			Отказ = Истина;
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон("У сотрудника %1 превышено количество дней отпуска в году", Результат.ВКМ_Сотрудник));
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		РезультатДвижения = Результат.Выбрать();
			
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	
	Пока РезультатДвижения.Следующий() Цикл 
		// регистр ВКМ_Отпуска
		Движение = Движения.ВКМ_Отпуска.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = РезультатДвижения.ВКМ_ДатаОкончания;
		Движение.ВКМ_Сотрудник = РезультатДвижения.ВКМ_Сотрудник;
		Движение.ВКМ_Значение = РезультатДвижения.КоличествоДней;
	КонецЦикла;
	
	КонецЦикла;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//Данный фрагмент построен конструктором.
	//При повторном использовании конструктора, внесенные вручную данные будут утеряны!
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ

КонецПроцедуры

#КонецОбласти	

#КонецЕсли

