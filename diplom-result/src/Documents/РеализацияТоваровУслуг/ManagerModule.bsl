
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// функция, которая используется для автоматического добавления команд создания документов 
// или других объектов на основе существующего объекта в контекстное меню
//
// Параметры:
//   КомандыСозданияНаОсновании - Строка
//
// Возвращаемое значение:
//  Строка
//	Неопределено
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
//ВКМ
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.РеализацияТоваровУслуг) Тогда
		
        КомандаСоздатьНаОсновании = КомандыСозданияНаОсновании.Добавить();
        КомандаСоздатьНаОсновании.Менеджер = Метаданные.Документы.РеализацияТоваровУслуг.ПолноеИмя();
        КомандаСоздатьНаОсновании.Представление = ОбщегоНазначения.ПредставлениеОбъекта(Метаданные.Документы.РеализацияТоваровУслуг);
        КомандаСоздатьНаОсновании.РежимЗаписи = "Проводить";
		
		Возврат КомандаСоздатьНаОсновании;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

//Процедура предназначенна для программного добавления команд печати в стандартный механизм печати 1С
//Параметры:
//   КомандыПечати - Строка
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
//ВКМ
	
	// Акт оказанных услуг
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "АктОказанныхУслуг";
	КомандаПечати.Представление = НСтр("ru = 'Акт оказанных услуг'");
	КомандаПечати.Порядок = 5;
	
КонецПроцедуры

//Процедура предназначенна для программного добавления команды печати Акт оказанных услуг
//Параметры:
//   МассивОбъектов - Строка
//	 ПараметрыПечати - Строка
//   КоллекцияПечатныхФорм - Строка
//	 ОбъектыПечати - Строка
//   ПараметрыВывода - Строка
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
//ВКМ
	
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "АктОказанныхУслуг");
	Если ПечатнаяФорма <> Неопределено Тогда
	    ПечатнаяФорма.ТабличныйДокумент = ПечатьАктаОказанныхУслуг(МассивОбъектов, ОбъектыПечати);
	    ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Акт оказанных услуг'");
	    ПечатнаяФорма.ПолныйПутьКМакету = "Документ.РеализацияТоваровУслуг.ВКМ_ПФ_MXL_АктОказанныхУслуг";
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьАктаОказанныхУслуг(МассивОбъектов, ОбъектыПечати)
	
//ВКМ
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПараметрыПечати_АктОказанныхУслуг";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.РеализацияТоваровУслуг.ВКМ_ПФ_MXL_АктОказанныхУслуг");
	
	ДанныеДокументов = ПолучитьДанныеДокументов(МассивОбъектов);
	
	ПервыйДокумент = Истина;
	
	Пока ДанныеДокументов.Следующий() Цикл
		
		Если Не ПервыйДокумент Тогда
			// Все документы нужно выводить на разных страницах.
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВывестиЗаголовокАктаОказанныхУслуг(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиТоварыУслуги(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиСуммуПрописью(ДанныеДокументов, ТабличныйДокумент, Макет);
		
		ВывестиПодвалАктаОказанныхУслуг(ДанныеДокументов, ТабличныйДокумент, Макет);
		
        // В табличном документе необходимо задать имя области, в которую был 
        // выведен объект. Нужно для возможности печати комплектов документов.
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
            НомерСтрокиНачало, ОбъектыПечати, ДанныеДокументов.Ссылка);		
		
	КонецЦикла;	
		
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПолучитьДанныеДокументов(МассивОбъектов)
	
//ВКМ
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Дата,
	|	РеализацияТоваровУслуг.Номер,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Контрагент,
	|	РеализацияТоваровУслуг.Договор,
	|	РеализацияТоваровУслуг.СуммаДокумента,
	|	РеализацияТоваровУслуг.Основание,
	|	РеализацияТоваровУслуг.Товары.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма),
	|	РеализацияТоваровУслуг.Услуги.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Количество,
	|		Цена,
	|		Сумма),
	|	РеализацияТоваровУслуг.Ссылка,
	|	РеализацияТоваровУслуг.Ответственный
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В (&МассивОбъектов)";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Процедура ВывестиЗаголовокАктаОказанныхУслуг(ДанныеДокументов, ТабличныйДокумент, Макет)
	
//ВКМ
	
	ОбластьЗаголовокДокумента = Макет.ПолучитьОбласть("Заголовок");
	
	ДанныеПечати = Новый Структура;
	
	ШаблонЗаголовка = "Акт оказанных услуг № %1 от %2";
	ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка,
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокументов.Номер),
		Формат(ДанныеДокументов.Дата, "ДЛФ=DD"));
	ДанныеПечати.Вставить("ТекстЗаголовка", ТекстЗаголовка);
	
	ОбластьЗаголовокДокумента.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьЗаголовокДокумента);
	
КонецПроцедуры

Процедура ВывестиРеквизитыСторон(ДанныеДокументов, ТабличныйДокумент, Макет)
	
//ВКМ
	
	ОбластьПоставщик = Макет.ПолучитьОбласть("Поставщик");
	ОбластьПокупатель = Макет.ПолучитьОбласть("Покупатель");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("ПредставлениеПоставщика", ДанныеДокументов.Организация);
	ДанныеПечати.Вставить("ПредставлениеПокупателя", ДанныеДокументов.Контрагент);
	ДанныеПечати.Вставить("Основание", ДанныеДокументов.Договор);
	
	ОбластьПоставщик.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПоставщик);
	
	ОбластьПокупатель.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПокупатель);
	
КонецПроцедуры

Процедура ВывестиТоварыУслуги(ДанныеДокументов, ТабличныйДокумент, Макет)
	
//ВКМ
	
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	
	ВыборкаТовары = ДанныеДокументов.Товары.Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(ВыборкаТовары);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ВыборкаУслуги = ДанныеДокументов.Услуги.Выбрать();
	Пока ВыборкаУслуги.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(ВыборкаУслуги);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("Всего", ДанныеДокументов.СуммаДокумента);
	
	ОбластьИтого.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьИтого);
	
КонецПроцедуры

Процедура ВывестиСуммуПрописью(ДанныеДокументов, ТабличныйДокумент, Макет)
	
//ВКМ
		
	ОбластьСуммаПрописью = Макет.ПолучитьОбласть("СуммаПрописью");
	СуммаПрописьюЗначение = ЧислоПрописью(ДанныеДокументов.СуммаДокумента, ,"рубль, рубля, рублей, м, копейка, копейки, копеек, ж");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("СуммаПрописью", СуммаПрописьюЗначение);
	
	ОбластьСуммаПрописью.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьСуммаПрописью);
	
КонецПроцедуры

Процедура ВывестиПодвалАктаОказанныхУслуг(ДанныеДокументов, ТабличныйДокумент, Макет)
	
//ВКМ
		
	ОбластьПодвалЗаказа = Макет.ПолучитьОбласть("ПодвалАктаОказанныхУслуг");
	
	ДанныеПечати = Новый Структура;
	ДанныеПечати.Вставить("ФИОИсполнителя", ДанныеДокументов.Ответственный);
	
	ОбластьПодвалЗаказа.Параметры.Заполнить(ДанныеПечати);
	ТабличныйДокумент.Вывести(ОбластьПодвалЗаказа);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли